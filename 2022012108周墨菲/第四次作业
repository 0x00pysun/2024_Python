import random
import string


def dataSampling(kwargs):
    if kwargs['datatype'] == 'int':
        it = iter(kwargs['datarange'])
        yield random.randint(next(it), next(it))
    elif kwargs['datatype'] == 'str':
        if isinstance(kwargs['datarange'], int):
            yield ''.join(random.SystemRandom().choice(string.ascii_uppercase) for _ in range(kwargs['datarange']))
    elif kwargs['datatype'] == 'float':
        it = iter(kwargs['datarange'])
        yield random.uniform(next(it), next(it))
    elif kwargs['datatype'] in ('list', 'tuple'):
        ele = []
        for key, sub_kwargs in kwargs['subs'].items():
            ele.append(dataSampling(sub_kwargs))
        if kwargs['datatype'] == 'list':
            yield ele
        else:
            yield tuple(ele)
    else:
        raise ValueError("unknown data type")

def cal_sta(data, method):
    if method == 'sum':
        yield sum(data)
    elif method == 'mean':
        yield sum(data) / len(data) if data else 0
    else:
        raise ValueError(f"Unknown method: {method}")
    if not data:
        yield None

def data_generator(**kwargs):
    for i in range(kwargs['num']):
        sampled_data = dataSampling(kwargs['struct'])
        if isinstance(sampled_data, (int, float)) or (isinstance(sampled_data, (list, tuple)) and all(
                isinstance(item, (int, float)) for item in sampled_data)):
            total = cal_sta(sampled_data, 'sum')  # 或者 'mean'，如果需要的话
            yield (sampled_data, total)
        else:
            yield (sampled_data, "Not a numeric data type")

        # 示例使用


para = {
    "num": 5,
    "struct": {
        "datatype": "list",
        "subs": {
            "item": {
                "datatype": "int",
                "datarange": (185, 285)
            },
            "item2": {
                "datatype": "str",
                "datarange": 5
            }
        }
    }
}
result = dataSampling(para)
print(result)
