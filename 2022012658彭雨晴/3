import random
import string
import statistics

def calculate_stats(func):
    def wrapper(*args, **kwargs):
        int_data = []
        float_data = []
        result = func(*args, **kwargs)
        for sublist in result:
            for item in sublist:
                if isinstance(item, int):
                    int_data.append(item)
                elif isinstance(item, float):
                    float_data.append(item)

        # 计算和打印int类型的平均数、方差和和
        if int_data:
            mean_int = statistics.mean(int_data)
            variance_int = statistics.variance(int_data)
            sum_int = sum(int_data)
            print(f"Integers: Average = {mean_int}, Variance = {variance_int}, Sum = {sum_int}")

        # 计算和打印float类型的平均数、方差和和
        if float_data:
            mean_float = statistics.mean(float_data)
            variance_float = statistics.variance(float_data)
            sum_float = sum(float_data)
            print(f"Floats: Average = {mean_float}, Variance = {variance_float}, Sum = {sum_float}")

        return result
    return wrapper

@calculate_stats
def dataSampling(structure, num):
    result = []
    for _ in range(num):
        if structure['type'] == 'tuple':
            result.append(generate_tuple(structure['subs']))
    return result

def generate_tuple(sub_structure):
    result = {}
    for key, value in sub_structure.items():
        result[key] = generate_data(value)
    return tuple(result.values())

def generate_data(structure):
    if structure['type'] == 'int':
        return random.randint(0, 100)
    elif structure['type'] == 'float':
        return random.uniform(0, 100)
    elif structure['type'] == 'str':
        return ''.join(random.choice(string.ascii_letters) for _ in range(10))

structure = {
    "type": "tuple",
    "subs": {
        "sub1": {"type": "int"},
        "sub2": {"type": "float"},
        "sub3": {"type": "str"}
    }
}
num_tuples = 5

random_tuples = dataSampling(structure, num_tuples)
for t in random_tuples:
    print(t)
